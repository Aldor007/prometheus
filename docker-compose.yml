version: '3.1'

volumes:
    prometheus_data: {}
    grafana_data: {}

networks:
  front-tier:
  back-tier:

services:

  prometheus:
    image: prom/prometheus:v2.0.0
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--storage.tsdb.retention=5d'
    ports:
      - '127.0.0.1:9090:9090'
    links:
      - alertmanager:alertmanager
    networks:
      - back-tier
    restart: always
    deploy:
      placement:
        constraints:
          - node.hostname == moby

  graphite-exporter:
      container_name: graphite-exporter
      image: prom/graphite-exporter
      volumes:
          - ./graphite-exporter/:/etc/graphite-exporter/
      command: '-graphite.mapping-strict-match -graphite.mapping-config=/etc/graphite-exporter/graphite_mapping.conf -graphite.sample-expiry 3h'
      ports:
          - "10.8.0.10:2003:9109"
      expose:
          - 9108
      networks:
          - back-tier

  alertmanager:
    image: prom/alertmanager
    ports:
       - '127.0.0.1:9093:9093'
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    networks:
      - back-tier
    restart: always
    command:
      - '-config.file=/etc/alertmanager/config.yml'
      - '-storage.path=/alertmanager'
    deploy:
      placement:
        constraints:
          - node.hostname == moby
  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - '127.0.0.1:3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
    env_file:
      - config.monitoring
    networks:
      - back-tier
      - front-tier
